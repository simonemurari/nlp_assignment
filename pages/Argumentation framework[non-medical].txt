In artificial intelligence and related fields, an argumentation framework is a way to deal with contentious information and draw conclusions from it using formalized arguments.
In an abstract argumentation framework, entry-level information is a set of abstract arguments that, for instance, represent data or a proposition. Conflicts between arguments are represented by a binary relation on the set of arguments. In concrete terms, you represent an argumentation framework with a directed graph such that the nodes are the arguments, and the arrows represent the attack relation.
There exist some extensions of the Dung's framework, like the logic-based argumentation frameworks or the value-based argumentation frameworks.

Abstract argumentation frameworks
Formal framework
Abstract argumentation frameworks, also called argumentation frameworks à la Dung, are defined formally as a pair:

A set of abstract elements called arguments, denoted 
  
    
      
        A
      
    
    {\displaystyle A}
  
A binary relation on 
  
    
      
        A
      
    
    {\displaystyle A}
  , called attack relation, denoted 
  
    
      
        R
      
    
    {\displaystyle R}
  For instance, the argumentation system 
  
    
      
        S
        =
        ⟨
        A
        ,
        R
        ⟩
      
    
    {\displaystyle S=\langle A,R\rangle }
   with 
  
    
      
        A
        =
        {
        a
        ,
        b
        ,
        c
        ,
        d
        }
      
    
    {\displaystyle A=\{a,b,c,d\}}
   and 
  
    
      
        R
        =
        {
        (
        a
        ,
        b
        )
        ,
        (
        b
        ,
        c
        )
        ,
        (
        d
        ,
        c
        )
        }
      
    
    {\displaystyle R=\{(a,b),(b,c),(d,c)\}}
   contains four arguments (
  
    
      
        a
        ,
        b
        ,
        c
      
    
    {\displaystyle a,b,c}
   and 
  
    
      
        d
      
    
    {\displaystyle d}
  ) and three attacks (
  
    
      
        a
      
    
    {\displaystyle a}
   attacks 
  
    
      
        b
      
    
    {\displaystyle b}
  , 
  
    
      
        b
      
    
    {\displaystyle b}
   attacks 
  
    
      
        c
      
    
    {\displaystyle c}
   and 
  
    
      
        d
      
    
    {\displaystyle d}
   attacks 
  
    
      
        c
      
    
    {\displaystyle c}
  ).
Dung defines some notions :

an argument 
  
    
      
        a
        ∈
        A
      
    
    {\displaystyle a\in A}
   is acceptable with respect to 
  
    
      
        E
        ⊆
        A
      
    
    {\displaystyle E\subseteq A}
   if and only if 
  
    
      
        E
      
    
    {\displaystyle E}
   defends 
  
    
      
        a
      
    
    {\displaystyle a}
  , that is 
  
    
      
        ∀
        b
        ∈
        A
      
    
    {\displaystyle \forall b\in A}
   such that 
  
    
      
        (
        b
        ,
        a
        )
        ∈
        R
        ,
        ∃
        c
        ∈
        E
      
    
    {\displaystyle (b,a)\in R,\exists c\in E}
   such that 
  
    
      
        (
        c
        ,
        b
        )
        ∈
        R
      
    
    {\displaystyle (c,b)\in R}
  ,
a set of arguments 
  
    
      
        E
      
    
    {\displaystyle E}
   is conflict-free if there is no attack between its arguments, formally : 
  
    
      
        ∀
        a
        ,
        b
        ∈
        E
        ,
        (
        a
        ,
        b
        )
        ∉
        R
      
    
    {\displaystyle \forall a,b\in E,(a,b)\not \in R}
  ,
a set of arguments 
  
    
      
        E
      
    
    {\displaystyle E}
   is admissible if and only if it is conflict-free and all its arguments are acceptable with respect to 
  
    
      
        E
      
    
    {\displaystyle E}
  .

Different semantics of acceptance
Extensions
To decide if an argument can be accepted or not, or if several arguments can be accepted together, Dung defines several semantics of acceptance that allows, given an argumentation system, sets of arguments (called extensions) to be computed. For instance, given 
  
    
      
        S
        =
        ⟨
        A
        ,
        R
        ⟩
      
    
    {\displaystyle S=\langle A,R\rangle }
  ,

  
    
      
        E
      
    
    {\displaystyle E}
   is a complete extension of 
  
    
      
        S
      
    
    {\displaystyle S}
   only if it is an admissible set and every acceptable argument with respect to 
  
    
      
        E
      
    
    {\displaystyle E}
   belongs to 
  
    
      
        E
      
    
    {\displaystyle E}
  ,

  
    
      
        E
      
    
    {\displaystyle E}
   is a preferred extension of 
  
    
      
        S
      
    
    {\displaystyle S}
   only if it is a maximal element (with respect to the set-theoretical inclusion) among the admissible sets with respect to 
  
    
      
        S
      
    
    {\displaystyle S}
  ,

  
    
      
        E
      
    
    {\displaystyle E}
   is a stable extension of 
  
    
      
        S
      
    
    {\displaystyle S}
   only if it is a conflict-free set that attacks every argument that does not belong in 
  
    
      
        E
      
    
    {\displaystyle E}
   (formally, 
  
    
      
        ∀
        a
        ∈
        A
        ∖
        E
        ,
        ∃
        b
        ∈
        E
      
    
    {\displaystyle \forall a\in A\backslash E,\exists b\in E}
   such that 
  
    
      
        (
        b
        ,
        a
        )
        ∈
        R
      
    
    {\displaystyle (b,a)\in R}
  ,

  
    
      
        E
      
    
    {\displaystyle E}
   is the (unique) grounded extension of 
  
    
      
        S
      
    
    {\displaystyle S}
   only if it is the smallest element (with respect to set inclusion) among the complete extensions of 
  
    
      
        S
      
    
    {\displaystyle S}
  .There exists some inclusions between the sets of extensions built with these semantics :

Every stable extension is preferred,
Every preferred extension is complete,
The grounded extension is complete,
If the system is well-founded (there exists no infinite sequence 
  
    
      
        
          a
          
            0
          
        
        ,
        
          a
          
            1
          
        
        ,
        …
        ,
        
          a
          
            n
          
        
        ,
        …
      
    
    {\displaystyle a_{0},a_{1},\dots ,a_{n},\dots }
   such that 
  
    
      
        ∀
        i
        >
        0
        ,
        (
        
          a
          
            i
            +
            1
          
        
        ,
        
          a
          
            i
          
        
        )
        ∈
        R
      
    
    {\displaystyle \forall i>0,(a_{i+1},a_{i})\in R}
  ), all these semantics coincide—only one extension is grounded, stable, preferred, and complete.Some other semantics have been defined.One introduce the notation 
  
    
      
        E
        x
        
          t
          
            σ
          
        
        (
        S
        )
      
    
    {\displaystyle Ext_{\sigma }(S)}
   to note the set of 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  -extensions of the system 
  
    
      
        S
      
    
    {\displaystyle S}
  .
In the case of the system 
  
    
      
        S
      
    
    {\displaystyle S}
   in the figure above, 
  
    
      
        E
        x
        
          t
          
            σ
          
        
        (
        S
        )
        =
        {
        {
        a
        ,
        d
        }
        }
      
    
    {\displaystyle Ext_{\sigma }(S)=\{\{a,d\}\}}
   for every Dung's semantic—the system is well-founded. That explains why the semantics coincide, and the accepted arguments are: 
  
    
      
        a
      
    
    {\displaystyle a}
   and 
  
    
      
        d
      
    
    {\displaystyle d}
  .

Labellings
Labellings are a more expressive way than extensions to express the acceptance of the arguments. Concretely, a labelling is a mapping that associates every argument with a label in (the argument is accepted), out (the argument is rejected), or undec (the argument is undefined—not accepted or refused).
One can also note a labelling as a set of pairs 
  
    
      
        (
        
          
            a
            r
            g
            u
            m
            e
            n
            t
          
        
        ,
        
          
            l
            a
            b
            e
            l
          
        
        )
      
    
    {\displaystyle ({\mathit {argument}},{\mathit {label}})}
  .
Such a mapping does not make sense without additional constraint. The notion of reinstatement labelling guarantees the sense of the mapping. 
  
    
      
        L
      
    
    {\displaystyle L}
   is a reinstatement labelling on the system 
  
    
      
        S
        =
        ⟨
        A
        ,
        R
        ⟩
      
    
    {\displaystyle S=\langle A,R\rangle }
   if and only if :

  
    
      
        ∀
        a
        ∈
        A
        ,
        L
        (
        a
        )
        =
        
          
            i
            n
          
        
      
    
    {\displaystyle \forall a\in A,L(a)={\mathit {in}}}
   if and only if 
  
    
      
        ∀
        b
        ∈
        A
      
    
    {\displaystyle \forall b\in A}
   such that 
  
    
      
        (
        b
        ,
        a
        )
        ∈
        R
        ,
        L
        (
        b
        )
        =
        
          
            o
            u
            t
          
        
      
    
    {\displaystyle (b,a)\in R,L(b)={\mathit {out}}}
  

  
    
      
        ∀
        a
        ∈
        A
        ,
        L
        (
        a
        )
        =
        
          
            o
            u
            t
          
        
      
    
    {\displaystyle \forall a\in A,L(a)={\mathit {out}}}
   if and only if 
  
    
      
        ∃
        b
        ∈
        A
      
    
    {\displaystyle \exists b\in A}
   such that 
  
    
      
        (
        b
        ,
        a
        )
        ∈
        R
      
    
    {\displaystyle (b,a)\in R}
   and 
  
    
      
        L
        (
        b
        )
        =
        
          
            i
            n
          
        
      
    
    {\displaystyle L(b)={\mathit {in}}}
  

  
    
      
        ∀
        a
        ∈
        A
        ,
        L
        (
        a
        )
        =
        
          
            u
            n
            d
            e
            c
          
        
      
    
    {\displaystyle \forall a\in A,L(a)={\mathit {undec}}}
   if and only if 
  
    
      
        L
        (
        a
        )
        ≠
        
          
            i
            n
          
        
      
    
    {\displaystyle L(a)\neq {\mathit {in}}}
   and 
  
    
      
        L
        (
        a
        )
        ≠
        
          
            o
            u
            t
          
        
      
    
    {\displaystyle L(a)\neq {\mathit {out}}}
  One can convert every extension into a reinstatement labelling: the arguments of the extension are in, those attacked by an argument of the extension are out, and the others are undec. Conversely, one can build an extension from a reinstatement labelling just by keeping the arguments in. Indeed, Caminada proved that the reinstatement labellings and the complete extensions can be mapped in a bijective way. Moreover, the other Datung's semantics can be associated to some particular sets of reinstatement labellings.
Reinstatement labellings distinguish arguments not accepted because they are attacked by accepted arguments from undefined arguments—that is, those that are not defended cannot defend themselves. An argument is undec if it is attacked by at least another undec. If it is attacked only  by arguments out, it must be in, and if it is attacked some argument in, then it is out.
The unique reinstatement labelling that corresponds to the system 
  
    
      
        S
      
    
    {\displaystyle S}
   above is 
  
    
      
        L
        =
        {
        (
        a
        ,
        
          
            i
            n
          
        
        )
        ,
        (
        b
        ,
        
          
            o
            u
            t
          
        
        )
        ,
        (
        c
        ,
        
          
            o
            u
            t
          
        
        )
        ,
        (
        d
        ,
        
          
            i
            n
          
        
        )
        }
      
    
    {\displaystyle L=\{(a,{\mathit {in}}),(b,{\mathit {out}}),(c,{\mathit {out}}),(d,{\mathit {in}})\}}
  .

Inference from an argumentation system
In the general case when several extensions are computed for a given semantic 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  , the agent that reasons from the system can use several mechanisms to infer information:
Credulous inference: the agent accepts an argument if it belongs to at least one of the 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  -extensions—in which case, the agent risks accepting some arguments that are not acceptable together (
  
    
      
        a
      
    
    {\displaystyle a}
   attacks 
  
    
      
        b
      
    
    {\displaystyle b}
  , and 
  
    
      
        a
      
    
    {\displaystyle a}
   and 
  
    
      
        b
      
    
    {\displaystyle b}
   each belongs to an extension)
Skeptical inference: the agent accepts an argument only if it belongs to every 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  -extension. In this case, the agent risks deducing too little information (if the intersection of the extensions is empty or has a very small cardinal).For these two methods to infer information, one can identify the set of accepted arguments, respectively 
  
    
      
        C
        
          r
          
            σ
          
        
        (
        S
        )
      
    
    {\displaystyle Cr_{\sigma }(S)}
   the set of the arguments credulously accepted under the semantic 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  , and 
  
    
      
        S
        
          c
          
            σ
          
        
        (
        S
        )
      
    
    {\displaystyle Sc_{\sigma }(S)}
   the set of arguments accepted skeptically under the semantic 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
   (the 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
   can be missed if there is no possible ambiguity about the semantic).
Of course, when there is only one extension (for instance, when the system is well-founded), this problem is very simple: the agent accepts arguments of the unique extension and rejects others.
The same reasoning can be done with labellings that correspond to the chosen semantic : an argument can be accepted if it is in for each labelling and refused if it is out for each labelling, the others being in an undecided state (the status of the arguments can remind the epistemic states of a belief in the AGM framework for dynamic of beliefs).

Equivalence between argumentation frameworks
There exists several criteria of equivalence between argumentation frameworks. Most of those criteria concern the sets of extensions or the set of accepted arguments.
Formally, given a semantic 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
   :

  
    
      
        
          
            E
            
              Q
              
                1
              
            
          
        
      
    
    {\displaystyle {\mathit {EQ_{1}}}}
   : two argumentation frameworks are equivalent if they have the same set of 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  -extensions, that is 
  
    
      
        
          S
          
            1
          
        
        
          ≡
          
            1
          
        
        
          S
          
            2
          
        
        ⇔
        E
        x
        
          t
          
            σ
          
        
        (
        
          S
          
            1
          
        
        )
        =
        E
        x
        
          t
          
            σ
          
        
        (
        
          S
          
            2
          
        
        )
      
    
    {\displaystyle S_{1}\equiv _{1}S_{2}\Leftrightarrow Ext_{\sigma }(S_{1})=Ext_{\sigma }(S_{2})}
   ;

  
    
      
        
          
            E
            
              Q
              
                2
              
            
          
        
      
    
    {\displaystyle {\mathit {EQ_{2}}}}
   : two argumentation frameworks are equivalent if they accept skeptically the same arguments, that is 
  
    
      
        
          S
          
            1
          
        
        
          ≡
          
            2
          
        
        
          S
          
            2
          
        
        ⇔
        S
        
          c
          
            σ
          
        
        (
        
          S
          
            1
          
        
        )
        =
        S
        
          c
          
            σ
          
        
        (
        
          S
          
            2
          
        
        )
      
    
    {\displaystyle S_{1}\equiv _{2}S_{2}\Leftrightarrow Sc_{\sigma }(S_{1})=Sc_{\sigma }(S_{2})}
   ;

  
    
      
        
          
            E
            
              Q
              
                2
              
            
          
        
      
    
    {\displaystyle {\mathit {EQ_{2}}}}
   : two argumentation frameworks are equivalent if they accept credulously the same arguments, that is 
  
    
      
        
          S
          
            1
          
        
        
          ≡
          
            3
          
        
        
          S
          
            2
          
        
        ⇔
        C
        
          r
          
            σ
          
        
        (
        
          S
          
            1
          
        
        )
        =
        C
        
          r
          
            σ
          
        
        (
        
          S
          
            2
          
        
        )
      
    
    {\displaystyle S_{1}\equiv _{3}S_{2}\Leftrightarrow Cr_{\sigma }(S_{1})=Cr_{\sigma }(S_{2})}
  .The strong equivalence says that two systems 
  
    
      
        
          S
          
            1
          
        
      
    
    {\displaystyle S_{1}}
   and 
  
    
      
        
          S
          
            2
          
        
      
    
    {\displaystyle S_{2}}
   are equivalent if and only if for all other system 
  
    
      
        
          S
          
            3
          
        
      
    
    {\displaystyle S_{3}}
  , the union of 
  
    
      
        
          S
          
            1
          
        
      
    
    {\displaystyle S_{1}}
   with 
  
    
      
        
          S
          
            3
          
        
      
    
    {\displaystyle S_{3}}
   is equivalent (for a given criterion) with the union of 
  
    
      
        
          S
          
            2
          
        
      
    
    {\displaystyle S_{2}}
   and 
  
    
      
        
          S
          
            3
          
        
      
    
    {\displaystyle S_{3}}
  .

Other kinds
The abstract framework of Dung has been instantiated to several particular cases.

Logic-based argumentation frameworks
In the case of logic-based argumentation frameworks, an argument is not an abstract entity, but a pair, where the first part is a minimal consistent set of formulae enough to prove the formula for the second part of the argument.
Formally, an argument is a pair 
  
    
      
        (
        Φ
        ,
        α
        )
      
    
    {\displaystyle (\Phi ,\alpha )}
   such that

  
    
      
        Φ
        ⊬
        ⊥
      
    
    {\displaystyle \Phi \nvdash \bot }
  

  
    
      
        Φ
        ⊢
        α
      
    
    {\displaystyle \Phi \vdash \alpha }
  

  
    
      
        Φ
      
    
    {\displaystyle \Phi }
   is a minimal set of 
  
    
      
        Δ
      
    
    {\displaystyle \Delta }
   satisfying 
  
    
      
        α
      
    
    {\displaystyle \alpha }
   where 
  
    
      
        Δ
      
    
    {\displaystyle \Delta }
   is a set of formulae used by the agent to reason.One calls 
  
    
      
        α
      
    
    {\displaystyle \alpha }
   a consequence of 
  
    
      
        Φ
      
    
    {\displaystyle \Phi }
  , and 
  
    
      
        Φ
      
    
    {\displaystyle \Phi }
   a support of 
  
    
      
        α
      
    
    {\displaystyle \alpha }
  .
In this case, the attack relation is not given in an explicit way, as a subset of the Cartesian product 
  
    
      
        A
        ×
        A
      
    
    {\displaystyle A\times A}
  , but as a property that indicates if an argument attacks another. For instance,

Relation defeater : 
  
    
      
        (
        Ψ
        ,
        β
        )
      
    
    {\displaystyle (\Psi ,\beta )}
   attacks 
  
    
      
        (
        Φ
        ,
        α
        )
      
    
    {\displaystyle (\Phi ,\alpha )}
   if and only if 
  
    
      
        β
        ⊢
        ¬
        (
        
          ϕ
          
            1
          
        
        ∧
        ⋯
        ∧
        
          ϕ
          
            n
          
        
        )
      
    
    {\displaystyle \beta \vdash \neg (\phi _{1}\wedge \dots \wedge \phi _{n})}
   for 
  
    
      
        {
        
          ϕ
          
            1
          
        
        ,
        …
        ,
        
          ϕ
          
            n
          
        
        }
        ⊆
        Φ
      
    
    {\displaystyle \{\phi _{1},\dots ,\phi _{n}\}\subseteq \Phi }
  
Relation undercut : 
  
    
      
        (
        Ψ
        ,
        β
        )
      
    
    {\displaystyle (\Psi ,\beta )}
   attacks 
  
    
      
        (
        Φ
        ,
        α
        )
      
    
    {\displaystyle (\Phi ,\alpha )}
   if and only if 
  
    
      
        β
        =
        ¬
        (
        
          ϕ
          
            1
          
        
        ∧
        ⋯
        ∧
        
          ϕ
          
            n
          
        
        )
      
    
    {\displaystyle \beta =\neg (\phi _{1}\wedge \dots \wedge \phi _{n})}
   for 
  
    
      
        {
        
          ϕ
          
            1
          
        
        ,
        …
        ,
        
          ϕ
          
            n
          
        
        }
        ⊆
        Φ
      
    
    {\displaystyle \{\phi _{1},\dots ,\phi _{n}\}\subseteq \Phi }
  
Relation rebuttal : 
  
    
      
        (
        Ψ
        ,
        β
        )
      
    
    {\displaystyle (\Psi ,\beta )}
   attacks 
  
    
      
        (
        Φ
        ,
        α
        )
      
    
    {\displaystyle (\Phi ,\alpha )}
   if and only if 
  
    
      
        β
        ⇔
        ¬
        α
      
    
    {\displaystyle \beta \Leftrightarrow \neg \alpha }
   is a tautologyGiven a particular attack relation, one can build a graph and reason in a similar way to the abstract argumentation frameworks (use of semantics to build extension, skeptical or credulous inference), the difference is that the information inferred from a logic based argumentation framework is a set of formulae (the consequences of the accepted arguments).

Value-based argumentation frameworks
The value-based argumentation frameworks come from the idea that during an exchange of arguments, some can be stronger than others with respect to a certain value they advance, and so the success of an attack between arguments depends on the difference of these values.
Formally, a value-based argumentation framework is a tuple 
  
    
      
        V
        A
        F
        =
        ⟨
        A
        ,
        R
        ,
        V
        ,
        
          
            val
          
        
        ,
        
          
            valprefs
          
        
        ⟩
      
    
    {\displaystyle VAF=\langle A,R,V,{\textit {val}},{\textit {valprefs}}\rangle }
   with 
  
    
      
        A
      
    
    {\displaystyle A}
   and 
  
    
      
        R
      
    
    {\displaystyle R}
   similar to the standard framework (a set of arguments and a binary relation on this set), 
  
    
      
        V
      
    
    {\displaystyle V}
   is a non empty set of values, 
  
    
      
        
          
            val
          
        
      
    
    {\displaystyle {\textit {val}}}
   is a mapping that associates each element from 
  
    
      
        A
      
    
    {\displaystyle A}
   to an element from 
  
    
      
        V
      
    
    {\displaystyle V}
  , and 
  
    
      
        
          
            valprefs
          
        
      
    
    {\displaystyle {\textit {valprefs}}}
   is a preference relation (transitive, irreflexive and asymmetric) on 
  
    
      
        V
        ×
        V
      
    
    {\displaystyle V\times V}
  .
In this framework, an argument 
  
    
      
        a
      
    
    {\displaystyle a}
   defeats another argument 
  
    
      
        b
      
    
    {\displaystyle b}
   if and only if

  
    
      
        a
      
    
    {\displaystyle a}
   attacks 
  
    
      
        b
      
    
    {\displaystyle b}
   in the "standard" meaning: 
  
    
      
        (
        a
        ,
        b
        )
        ∈
        R
      
    
    {\displaystyle (a,b)\in R}
   ;
and 
  
    
      
        (
        
          
            val
          
        
        (
        b
        )
        ,
        v
        a
        l
        (
        a
        )
        )
        ∉
        
          
            valprefs
          
        
      
    
    {\displaystyle ({\textit {val}}(b),val(a))\not \in {\textit {valprefs}}}
  , that is the value advanced by 
  
    
      
        b
      
    
    {\displaystyle b}
   is not preferred to the one advanced by 
  
    
      
        a
      
    
    {\displaystyle a}
  .One remarks that an attack succeeds if both arguments are associated to the same value, or if there is no preference between their respective values.

Assumption-based argumentation frameworks
In assumption-based argumentation (ABA) frameworks, arguments are defined as a set of rules and attacks are defined in terms of assumptions and contraries.
Formally, an assumption-based argumentation framework is a tuple 
  
    
      
        ⟨
        
          
            L
          
        
        ,
        
          
            R
          
        
        ,
        
          
            A
          
        
        ,
        
          
            
              
                ␣
              
            
            ¯
          
        
        ⟩
      
    
    {\displaystyle \langle {\mathcal {L}},{\mathcal {R}},{\mathcal {A}},{\overline {\mathrm {\textvisiblespace} }}\rangle }
  , where

  
    
      
        ⟨
        
          
            L
          
        
        ,
        
          
            R
          
        
        ⟩
      
    
    {\displaystyle \langle {\mathcal {L}},{\mathcal {R}}\rangle }
    is a deductive system, where 
  
    
      
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {L}}}
   is the language and 
  
    
      
        
          
            R
          
        
      
    
    {\displaystyle {\mathcal {R}}}
   is the set of inference rules in the form of 
  
    
      
        
          s
          
            0
          
        
        ←
        
          s
          
            1
          
        
        ,
        …
        ,
        
          s
          
            m
          
        
      
    
    {\displaystyle s_{0}\leftarrow s_{1},\dotsc ,s_{m}}
  , for 
  
    
      
        m
        >
        0
      
    
    {\displaystyle m>0}
   and 
  
    
      
        
          s
          
            0
          
        
        ,
        
          s
          
            1
          
        
        ,
        …
        ,
        
          s
          
            m
          
        
        ∈
        
          
            L
          
        
      
    
    {\displaystyle s_{0},s_{1},\dotsc ,s_{m}\in {\mathcal {L}}}
  ;

  
    
      
        
          
            A
          
        
      
    
    {\displaystyle {\mathcal {A}}}
  , where 
  
    
      
        
          
            A
          
        
        ⊆
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {A}}\subseteq {\mathcal {L}}}
   is a non-empty set, named the assumptions;

  
    
      
        
          
            
              
                ␣
              
            
            ¯
          
        
      
    
    {\displaystyle {\overline {\mathrm {\textvisiblespace} }}}
   is a total mapping from 
  
    
      
        
          
            A
          
        
      
    
    {\displaystyle {\mathcal {A}}}
   to 
  
    
      
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {L}}}
  , where 
  
    
      
        
          
            a
            ¯
          
        
      
    
    {\displaystyle {\overline {a}}}
   is defined as the contrary of 
  
    
      
        a
      
    
    {\displaystyle a}
  .As a consequence of defining an ABA, an argument can be represented in a tree-form. Formally, given a deductive system 
  
    
      
        ⟨
        
          
            L
          
        
        ,
        
          
            R
          
        
        ⟩
      
    
    {\displaystyle \langle {\mathcal {L}},{\mathcal {R}}\rangle }
   and set of assumptions 
  
    
      
        
          
            A
          
        
        ⊆
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {A}}\subseteq {\mathcal {L}}}
  , an argument for claim 
  
    
      
        c
        ∈
        
          
            L
          
        
      
    
    {\textstyle c\in {\mathcal {L}}}
   supported by 
  
    
      
        S
        ⊆
        
          
            A
          
        
      
    
    {\displaystyle S\subseteq {\mathcal {A}}}
  , is a tree with nodes labelled by sentences in 
  
    
      
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {L}}}
   or by symbol 
  
    
      
        τ
      
    
    {\displaystyle \tau }
  , such that:

The root is labelled by 
  
    
      
        c
      
    
    {\displaystyle c}
  
For each node 
  
    
      
        N
      
    
    {\displaystyle N}
  ,
If 
  
    
      
        N
      
    
    {\displaystyle N}
   is a leaf node, then 
  
    
      
        N
      
    
    {\displaystyle N}
   is labelled by either an assumption or by 
  
    
      
        τ
      
    
    {\displaystyle \tau }
  
If 
  
    
      
        N
      
    
    {\displaystyle N}
   is not a leaf node, then there is an inference rule 
  
    
      
        
          l
          
            N
          
        
        ←
        
          s
          
            1
          
        
        ,
        .
        .
        .
        ,
        
          s
          
            m
          
        
      
    
    {\displaystyle l_{N}\leftarrow s_{1},...,s_{m}}
  , 
  
    
      
        (
        m
        ≥
        0
        )
      
    
    {\displaystyle (m\geq 0)}
  , where 
  
    
      
        
          l
          
            N
          
        
      
    
    {\displaystyle l_{N}}
  is the label of 
  
    
      
        N
      
    
    {\displaystyle N}
   and
If 
  
    
      
        m
        =
        0
      
    
    {\displaystyle m=0}
  , then the rule shall be 
  
    
      
        
          l
          
            N
          
        
        ←
        τ
      
    
    {\displaystyle l_{N}\leftarrow \tau }
   (i.e. child of 
  
    
      
        N
      
    
    {\displaystyle N}
   is 
  
    
      
        τ
      
    
    {\displaystyle \tau }
  )
Otherwise, 
  
    
      
        N
      
    
    {\displaystyle N}
   has 
  
    
      
        m
      
    
    {\displaystyle m}
   children, labelled by 
  
    
      
        
          s
          
            1
          
        
        ,
        .
        .
        .
        ,
        
          s
          
            m
          
        
      
    
    {\displaystyle s_{1},...,s_{m}}
  

  
    
      
        S
      
    
    {\displaystyle S}
   is the set of all assumptions labeling the leave nodesAn argument with claim 
  
    
      
        c
      
    
    {\displaystyle c}
   supported by a set of assumption 
  
    
      
        S
      
    
    {\displaystyle S}
   can also be denoted as 
  
    
      
        S
        ⊢
        c
      
    
    {\displaystyle S\vdash c}

See also
Notes


== References ==